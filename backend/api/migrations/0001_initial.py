# Generated by Django 5.0.1 on 2024-01-16 16:45

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Attendanance_type',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('biometric', models.BooleanField()),
                ('face_recognition', models.BooleanField()),
                ('barcode', models.BooleanField()),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('name', models.CharField(max_length=255)),
                ('email', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('designation', models.CharField(default='', max_length=255)),
                ('date_of_birth', models.DateField()),
                ('register_no', models.CharField(max_length=100)),
                ('branch', models.CharField(choices=[('Btech', 'btech'), ('B.Sc', 'bsc')], max_length=100)),
                ('dept', models.CharField(max_length=100)),
                ('passout_year', models.IntegerField()),
                ('student_status', models.BooleanField()),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('registation_date', models.DateTimeField(auto_now_add=True)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('start_time', models.TimeField()),
                ('end_time', models.TimeField()),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('venue', models.TextField()),
                ('accept_new_entry', models.BooleanField()),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('rejected', 'Rejected'), ('onprocess', 'On Process'), ('hold', 'Hold')], max_length=255)),
                ('attendanance_markers', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_attendance_marked', to=settings.AUTH_USER_MODEL)),
                ('paticipants', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_participats', to=settings.AUTH_USER_MODEL)),
                ('type_of_attendance', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='api.attendanance_type')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='events_creator', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event_Attendanance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('latitude', models.FloatField()),
                ('longitude', models.FloatField()),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.event')),
                ('paticipant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances_participated', to=settings.AUTH_USER_MODEL)),
                ('person_marked', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attendances_marked_by', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KH_Club_Members',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('club', models.CharField(max_length=100)),
                ('permission', models.CharField(max_length=100)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('edited_date', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_member', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='KH_Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('type', models.CharField(choices=[('late_night', 'Late_Night'), ('1st_year', '1st_Year')], max_length=100)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='api.kh_club_members')),
            ],
        ),
        migrations.CreateModel(
            name='KH_Project',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('status', models.CharField(choices=[('accepted', 'Accepted'), ('rejected', 'Rejected'), ('onprocess', 'On Process'), ('hold', 'Hold')], max_length=255)),
                ('kh_members', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_team', to='api.kh_club_members')),
                ('project_lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='project_led', to='api.kh_club_members')),
            ],
        ),
        migrations.CreateModel(
            name='KH_Club_Members_Attendanance',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField(auto_now_add=True)),
                ('word_done', models.TextField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='club_attendances', to='api.kh_club_members')),
                ('project', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='api.kh_project')),
            ],
        ),
    ]
